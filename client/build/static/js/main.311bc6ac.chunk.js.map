{"version":3,"sources":["Services/AuthService.js","Context/AuthContext.js","Components/Navbar.js","Components/ReviewItem.js","Services/ReviewService.js","Components/GenreList.js","Components/Home.js","Components/Message.js","Components/Login.js","Components/Register.js","Components/NewReview.js","Components/Admin.js","hocs/PrivateRoute.js","hocs/UnPrivateRoute.js","App.js","index.js"],"names":["user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","role","AuthContext","createContext","children","useState","setUser","setIsAuthenticated","isLoaded","setIsLoaded","useEffect","AuthService","Provider","value","NavBar","props","useContext","onClickLogoutHandler","success","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","href","icon","faGithubSquare","size","color","ReviewItem","console","log","review","reviewScore","stars","i","push","key","faStar","style","paddingBottom","songName","artistName","marginBottom","reviewGenre","reviewText","response","message","msgBody","msgError","GenreList","prop","reviewObject","reviews","totalCount","genreCount","forEach","Home","setReviews","ReviewService","map","_id","getStyle","baseClass","Message","Login","password","setMessage","authContext","onChange","event","target","name","marginTop","onSubmit","preventDefault","history","htmlFor","placeholder","Register","timerID","useRef","clearTimeout","setTimeout","Reviews","setReview","useHistory","resetForm","defaultValue","hidden","minHeight","Admin","PrivateRoute","Component","component","roles","rest","render","includes","pathname","state","from","location","UnPrivateRoute","App","exact","path","NewReview","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311bc6ac.chunk.js","sourcesContent":["export default {\r\n  login: user => {\r\n    return fetch('/user/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(res => {\r\n      if (res.status !== 401) return res.json().then(data => data);\r\n      else return { isAuthenticated: false, user: { username: '', role: '' } };\r\n    });\r\n  },\r\n  register: user => {\r\n    return fetch('/user/register', {\r\n      method: 'post',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => data);\r\n  },\r\n  logout: () => {\r\n    return fetch('/user/logout')\r\n      .then(res => res.json())\r\n      .then(data => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch('/user/authenticated').then(res => {\r\n      if (res.status !== 401) return res.json().then(data => data);\r\n      else return { isAuthenticated: false, user: { username: '', role: '' } };\r\n    });\r\n  },\r\n};\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport AuthService from '../Services/AuthService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated().then(data => {\r\n      setUser(data.user);\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setIsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../Services/AuthService';\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n\r\nconst NavBar = props => {\r\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\r\n\r\n    const onClickLogoutHandler = () => {\r\n        AuthService.logout().then(data => {\r\n            if(data.success){\r\n                setUser(data.user);\r\n                setIsAuthenticated(false);\r\n            };\r\n        });\r\n    }\r\n\r\n    const unauthenticatedNavBar = () => {\r\n        return (\r\n            <>\r\n                <Link to=\"/\">\r\n                    <li className=\"nav-item nav-link\"> Home </li>\r\n                </Link>\r\n                <Link to=\"/login\">\r\n                    <li className=\"nav-item nav-link\"> Login </li>\r\n                </Link>\r\n                <Link to=\"/register\">\r\n                    <li className=\"nav-item nav-link\"> Register </li>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n    const authenticatedNavBar = () => {\r\n        return (\r\n            <>\r\n                <Link to=\"/\">\r\n                    <li className=\"nav-item nav-link\"> Home </li>\r\n                </Link>\r\n                <Link to=\"/newreview\">\r\n                    <li className=\"nav-item nav-link\"> New Review </li>\r\n                </Link>\r\n                {\r\n                    user.role === \"admin\" ? <Link to=\"/admin\"><li className=\"nav-item nav-link\"> Admin </li></Link> : null\r\n                }\r\n                <button type=\"button\" className=\"btn btn-link nav-item nav-link\" onClick={ onClickLogoutHandler }> Logout </button>        \r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to=\"/\">\r\n                <div className=\"navbar-brand\">Skybeat</div>\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    { !isAuthenticated ? unauthenticatedNavBar() : authenticatedNavBar()}\r\n                </ul>\r\n                <div className=\"form-inline my-2 my-lg-0\">\r\n                    <a href=\"https://github.com/TheResinger/SkybeatReact\"><FontAwesomeIcon icon={faGithubSquare} size=\"2x\" color=\"black\"></FontAwesomeIcon></a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ReviewItem = props => {\r\n  console.log(props.review.reviewScore);\r\n  const stars = [];\r\n  for(let i = 0; i < props.review.reviewScore; i++)\r\n  {\r\n    stars.push(<FontAwesomeIcon key={`review[${i}]`} icon={faStar} />);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"card text-center\">\r\n        <div className=\"card-header\">\r\n          <h3>{props.review.songName}</h3>\r\n          <h4>{props.review.artistName}</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{props.review.reviewText}</p>\r\n          <p className=\"card-text\">{props.review.reviewScore}</p>\r\n        </div>\r\n      </div>\r\n      <br /> */}\r\n      <div className=\"card border-dark\">\r\n        <div className=\"card-header border-0\" style={{paddingBottom: \"0px\"}}>\r\n          <h5 className=\"card-title text-center\"><span>{props.review.songName}</span> - <span>{props.review.artistName}</span></h5>\r\n          <h6 className=\"card-title border-dark border-bottom text-center\" style={{ paddingBottom: \"6px\", marginBottom: \"0px\"}}>{props.review.reviewGenre}</h6>\r\n        </div>\r\n        <div className=\"row card-body\">\r\n          <div className=\"col-12\">\r\n            <p className=\"card-text\">{props.review.reviewText}</p>\r\n            <br />\r\n            {stars}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReviewItem;\r\n","export default {\r\n  getReviews: () => {\r\n    return fetch('/user/reviews').then(response => {\r\n      if (response.status !== 401) {\r\n        return response.json().then(data => data);\r\n      } else {\r\n        return { message: { msgBody: 'Unauthorized' }, msgError: true };\r\n      }\r\n    });\r\n  },\r\n  postReview: review => {\r\n    return fetch('/user/newreview', {\r\n      method: 'post',\r\n      body: JSON.stringify(review),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(response => {\r\n      if (response.status !== 401) {\r\n        return response.json().then(data => data);\r\n      } else {\r\n        return { message: { msgBody: 'Unauthorized' }, msgError: true };\r\n      }\r\n    });\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst GenreList = prop => {\r\n    let reviewObject = prop.reviews;\r\n    let totalCount = 0;\r\n    let genreCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    reviewObject.forEach(review => {\r\n        switch (review.reviewGenre) {\r\n            case \"Alternative\":\r\n                genreCount[0] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Blues\":\r\n                genreCount[1] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Classical\":\r\n                genreCount[2] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Country\":\r\n                genreCount[3] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Dance\":\r\n                genreCount[4] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Electronic\":\r\n                genreCount[5] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Hip-Hop\":\r\n                genreCount[6] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Rap\":\r\n                genreCount[7] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Jazz\":\r\n                genreCount[8] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Latin\":\r\n                genreCount[9] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Pop\":\r\n                genreCount[10] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"R&B\":\r\n                genreCount[11] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Soul\":\r\n                genreCount[12] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Rock\":\r\n                genreCount[13] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            case \"Metal\":\r\n                genreCount[14] += 1;\r\n                totalCount += 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"card text-center border-dark\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-text\">All : {totalCount} Posts</h5>\r\n                <h5 className=\"card-text\">Alternative : {genreCount[0]} Posts</h5>\r\n                <h5 className=\"card-text\">Blues : {genreCount[1]} Posts</h5>\r\n                <h5 className=\"card-text\">Classical : {genreCount[2]} Posts</h5>\r\n                <h5 className=\"card-text\">Country : {genreCount[3]} Posts</h5>\r\n                <h5 className=\"card-text\">Dance : {genreCount[4]} Posts</h5>\r\n                <h5 className=\"card-text\">Electronic : {genreCount[5]} Posts</h5>\r\n                <h5 className=\"card-text\">Hip-Hop : {genreCount[6]} Posts</h5>\r\n                <h5 className=\"card-text\">Rap : {genreCount[7]} Posts</h5>\r\n                <h5 className=\"card-text\">Jazz : {genreCount[8]} Posts</h5>\r\n                <h5 className=\"card-text\">Latin : {genreCount[9]} Posts</h5>\r\n                <h5 className=\"card-text\">Pop : {genreCount[10]} Posts</h5>\r\n                <h5 className=\"card-text\">R&B : {genreCount[11]} Posts</h5>\r\n                <h5 className=\"card-text\">Soul : {genreCount[12]} Posts</h5>\r\n                <h5 className=\"card-text\">Rock : {genreCount[13]} Posts</h5>\r\n                <h5 className=\"card-text\">Metal : {genreCount[14]} Posts</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreList;","import React, {useState, useEffect} from 'react';\r\nimport ReviewItem from './ReviewItem';\r\nimport ReviewService from '../Services/ReviewService';\r\nimport GenreList from './GenreList';\r\n\r\nconst Home = prop => {\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ReviewService.getReviews().then(data => {\r\n            setReviews(data.reviews);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <GenreList reviews={reviews} />\r\n                    <br />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    {reviews.map(review => {\r\n                        return <ReviewItem key={review._id} review={review} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst getStyle = props => {\r\n  let baseClass = 'alert ';\r\n  if (props.message.msgError) baseClass = baseClass + 'alert-danger';\r\n  else baseClass = baseClass + 'alert-primary';\r\n  return baseClass + ' text-center';\r\n};\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={getStyle(props)} role=\"alert\">\r\n      {props.message.msgBody}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useContext } from 'react';\r\nimport AuthService from '../Services/AuthService';\r\nimport Message from '../Components/Message';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst Login = props => {\r\n  const [user, setUser] = useState({ username: '', password: '' });\r\n  const [message, setMessage] = useState(null);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const onChange = event => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmitClick = event => {\r\n    event.preventDefault();\r\n    AuthService.login(user).then(data => {\r\n      const { isAuthenticated, user, message } = data;\r\n      if (isAuthenticated) {\r\n        authContext.setUser(user);\r\n        authContext.setIsAuthenticated(isAuthenticated);\r\n        props.history.push('/');\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-8 card\" style={{marginTop: \"1em\"}}>\r\n          <br />\r\n          <h3 className=\"mb-4 mt-0 text-center\">Please Sign In</h3>\r\n          <form onSubmit={onSubmitClick}>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"username\" className=\"col-sm-3 col-form-label\" >Username:</label>\r\n              <div className=\"col-sm-9\">\r\n              <input type=\"text\" name=\"username\" onChange={onChange} className=\"form-control\" placeholder=\"Enter Username\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\" >Password:</label>\r\n              <div className=\"col-sm-9\">\r\n              <input type=\"password\" name=\"password\" onChange={onChange} className=\"form-control\" placeholder=\"Enter Password\" />\r\n              </div>\r\n            </div>\r\n            <button className=\"btn btn-large btn-primary btn-block\" type=\"submit\"> Log In </button>\r\n          </form>\r\n          <br />\r\n        </div>\r\n          {message ? <Message message={message} /> : null}\r\n        <div className=\"col-md-2\"></div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport AuthService from '../Services/AuthService';\r\nimport Message from '../Components/Message';\r\n\r\nconst Register = props => {\r\n    const [ user, setUser ] = useState({ username : \"\", password : \"\", role : \"user\" });\r\n    const [ message, setMessage ] = useState(null);\r\n    let timerID = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timerID);\r\n        }\r\n    }, []);\r\n\r\n    const onChange = event => {\r\n        setUser({ ...user, [event.target.name] : event.target.value })\r\n    }\r\n    \r\n    const resetForm = () => {\r\n        setUser( { username: \"\", password: \"\", role: \"\" });\r\n    }\r\n\r\n    const onSubmitClick = event => {\r\n        event.preventDefault();\r\n        AuthService.register(user).then(data => {\r\n            const { message } = data;\r\n            setMessage(message);\r\n            resetForm();\r\n            if(!message.msgError){\r\n                timerID = setTimeout(() => {\r\n                    props.history.push('/login');\r\n                },2000)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-8 card\" style={{marginTop: \"1em\"}}>\r\n                    <br />\r\n                    <h3 className=\"mb-4 mt-0 text-center\">Please Register</h3>\r\n                    <form onSubmit={onSubmitClick}>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"username\" className=\"col-sm-3 col-form-label\" >Username:</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <input type=\"text\" name=\"username\" onChange={onChange} className=\"form-control\" placeholder=\"Enter Username\" value={user.username}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\" >Password:</label>\r\n                            <div className=\"col-sm-9\">\r\n                                <input type=\"password\" name=\"password\" onChange={onChange} className=\"form-control\" placeholder=\"Enter Password\" value={user.password}/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-large btn-primary btn-block\" type=\"submit\">Register</button>\r\n                    </form>\r\n                    <br />\r\n                    { message ? <Message message={ message } /> : null }\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Register;","import React, { useState, useContext} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReviewService from '../Services/ReviewService';\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport Message from './Message';\r\n\r\nconst Reviews = prop => {\r\n  const [review, setReview] = useState({ songName: '', artistName : '', reviewGenre : '', reviewText : '', reviewScore : '' });\r\n  const [message, setMessage] = useState(null);\r\n  const authContext = useContext(AuthContext);\r\n  let history = useHistory();\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(review);\r\n    ReviewService.postReview(review).then(data => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (message.msgBody === 'Unauthorized') {\r\n        setMessage(message);\r\n        authContext.setUser({ username: '', role: '' });\r\n        authContext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n      setTimeout(() => {\r\n        if(!message === \"A Database Error has Occured\"){\r\n          history.push('/');\r\n        }\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  const onChange = event => {\r\n    const {name, value} = event.target;\r\n    setReview({\r\n      ...review,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setReview({ songName: '', artistName : '', reviewGenre : '', reviewText : '', reviewScore : '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group container\">\r\n      <div className =\"row\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-8 card\" style={{marginTop: \"1em\"}}>\r\n          <br />\r\n          <h2 className=\"mb-4 mt-0 text-center\">Enter your review.</h2>\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"songName\" className=\"col-sm-3 col-form-label\" >Song Name</label>\r\n              <div className=\"col-sm-9\">\r\n                <input type=\"text\" name=\"songName\" value={review.songName} onChange={onChange} className=\"form-control\" placeholder=\"Enter the song name.\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"artistName\" className=\"col-sm col-form-label\" >Artist Name</label>\r\n              <div className=\"col-sm-9\">\r\n                <input type=\"text\" name=\"artistName\" value={review.artistName} onChange={onChange} className=\"form-control\" placeholder=\"Please Enter Artist Name\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"reviewGenre\" className=\"col-sm col-form-label\" >Genre</label>\r\n              <div className=\"col-sm-9\">\r\n                <select name=\"reviewGenre\" className=\"form-control\" value={review.reviewGenre} onChange={onChange}>\r\n                  <option defaultValue hidden>Select a Genre</option>\r\n                  <option value=\"Alternative\">Alternative</option>\r\n                  <option value=\"Blues\">Blues</option>\r\n                  <option value=\"Classical\">Classical</option>\r\n                  <option value=\"Country\">Country</option>\r\n                  <option value=\"Dance\">Dance</option>\r\n                  <option value=\"Electronic\">Electronic</option>\r\n                  <option value=\"Hip-Hop\">Hip-Hop</option>\r\n                  <option value=\"Rap\">Rap</option>\r\n                  <option value=\"Jazz\">Jazz</option>\r\n                  <option value=\"Latin\">Latin</option>\r\n                  <option value=\"Pop\">Pop</option>\r\n                  <option value=\"R&B\">R&B</option>\r\n                  <option value=\"Soul\">Soul</option>\r\n                  <option value=\"Rock\">Rock</option>\r\n                  <option value=\"Metal\">Metal</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"reviewText\" className=\"col-sm col-form-label\" >Review</label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea type=\"text\" name=\"reviewText\" value={review.reviewText} onChange={onChange} className=\"form-control\" placeholder=\"Please Enter Review\" style={{minHeight: \"5em\"}}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"reviewGenre\" className=\"col-sm col-form-label\" >Score</label>\r\n              <div className=\"col-sm-9\">\r\n                <select name=\"reviewScore\" className=\"form-control\" value={review.reviewScore} onChange={onChange}>\r\n                  <option defaultValue hidden>Select a Score</option>\r\n                  <option value={1}>1</option>\r\n                  <option value={2}>2</option>\r\n                  <option value={3}>3</option>\r\n                  <option value={4}>4</option>\r\n                  <option value={5}>5</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n          <br />\r\n        </div>\r\n        <div className=\"col-md-2\"></div>\r\n\r\n        \r\n      </div>\r\n      <br />\r\n      \r\n        {/* <h2 className=\"mb-4 mt-0 text-center\">Enter your review.</h2>\r\n        <input placeholder=\"Enter Song Name\" type=\"text\" className=\"form-control\" name=\"songName\" value={review.songName} onChange={onChange} required />\r\n        <input type=\"text\" name=\"artistName\" placeholder=\"Enter Artist Here\" value={review.artistName} onChange={onChange} required />\r\n        <select value={review.reviewGenre} onChange={onChange}>\r\n            <option value=\"none\" selected disabled hidden>Select a Genre</option>\r\n            <option value=\"Alternative\">Alternative</option>\r\n            <option value=\"Blues\">Blues</option>\r\n            <option value=\"Classical\">Classical</option>\r\n            <option value=\"Country\">Country</option>\r\n            <option value=\"Dance\">Dance</option>\r\n            <option value=\"Electronic\">Electronic</option>\r\n            <option value=\"Hip-Hop\">Hip-Hop</option>\r\n            <option value=\"Rap\">Rap</option>\r\n            <option value=\"Jazz\">Jazz</option>\r\n            <option value=\"Latin\">Latin</option>\r\n            <option value=\"Pop\">Pop</option>\r\n            <option value=\"R&B\">R&B</option>\r\n            <option value=\"Soul\">Soul</option>\r\n            <option value=\"Rock\">Rock</option>\r\n            <option value=\"Metal\">Metal</option>\r\n        </select>\r\n        <input type=\"text\" id=\"body\" placeholder=\"Enter Review Here\" required />\r\n        <select id=\"rating\">\r\n            <option value=\"none\" selected disabled hidden>Select a rating</option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n        </select>\r\n        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Submit</button> */}\r\n\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;","import React from 'react';\r\n\r\nconst Admin = () => <h1>Admin Page</h1>;\r\n\r\nexport default Admin;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!isAuthenticated)\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { from: props.location } }}\r\n            />\r\n          );\r\n        if (!roles.includes(user.role))\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/', state: { from: props.location } }}\r\n            />\r\n          );\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst UnPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (isAuthenticated)\r\n          return (\r\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n          );\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnPrivateRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport NavBar from './Components/Navbar';\r\nimport Home from './Components/Home';\r\nimport Login from './Components/Login';\r\nimport Register from './Components/Register';\r\nimport NewReview from './Components/NewReview';\r\nimport Admin from './Components/Admin';\r\nimport PrivateRoute from './hocs/PrivateRoute';\r\nimport UnPrivateRoute from './hocs/UnPrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <UnPrivateRoute path=\"/login\" component={Login} />\r\n      <UnPrivateRoute path=\"/register\" component={Register} />\r\n      <PrivateRoute path=\"/newreview\" roles={['user', 'admin']} component={NewReview} />\r\n      <PrivateRoute path=\"/admin\" roles={['admin']} component={Admin} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport AuthProvider from './Context/AuthContext';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}